from sqlalchemy import Column, Integer, String, Boolean, DateTime, Enum, Date, text
from sqlalchemy.orm import relationship
from config.db import Base
import enum
from datetime import datetime
import uuid
from sqlalchemy.dialects.postgresql import UUID

# üîπ Enumeraci√≥n para los g√©neros disponibles
class MyGenero(str, enum.Enum):
    Masculino = "Masculino"
    Femenino = "Femenino"
    Otro = "Otro"

# üîπ Enumeraci√≥n para los tipos de sangre disponibles
class MySangre(str, enum.Enum):
    AP = "A+"
    AN = "A-"
    BP = "B+"
    BN = "B-"
    ABP = "AB+"
    ABN = "AB-"
    OP = "O+"
    ON = "O-" 

# üîπ Modelo de persona asociado a los usuarios del sistema
class Person(Base):
    __tablename__ = "tbb_personas"  # Nombre de la tabla en la base de datos

    # ID √∫nico de la persona (PK)
    ID = Column(UUID(as_uuid=True), primary_key=True, index=True, default=uuid.uuid4)

    # Relaci√≥n con el modelo de usuario (1 a 1)
    usuario = relationship("User", back_populates="persona", uselist=False)  # Relaci√≥n inversa con User

    # T√≠tulo de cortes√≠a, por ejemplo: "Sr.", "Dra.", "Ing."
    Titulo_Cortesia = Column(String(20))

    # Nombre(s) de la persona
    Nombre = Column(String(80), nullable=False)

    # Primer apellido (obligatorio)
    Primer_Apellido = Column(String(80), nullable=False)

    # Segundo apellido (opcional)
    Segundo_Apellido = Column(String(80), nullable=True)

    # CURP √∫nica por persona
    CURP = Column(String(18), unique=True, nullable=False)

    # Correo electr√≥nico √∫nico
    Correo_Electronico = Column(String(100), unique=True, nullable=False)

    # Tel√©fono personal o de contacto (opcional)
    Telefono = Column(String(15), nullable=True)

    # Fecha de nacimiento de la persona
    Fecha_Nacimiento = Column(Date, nullable=False)

    # Ruta o nombre del archivo de la fotograf√≠a (opcional)
    Fotografia = Column(String(100), nullable=True)

    # G√©nero (Masculino, Femenino, Otro)
    Genero = Column(Enum(MyGenero), nullable=False)

    # Tipo de sangre (usando Enum personalizado)
    Tipo_Sangre = Column(Enum(MySangre), nullable=False)

    # Estatus activo/inactivo (booleano)
    Estatus = Column(Boolean, default=False, nullable=False)

    # Fecha de registro autom√°tica
    Fecha_Registro = Column(DateTime, nullable=False, server_default=text('CURRENT_TIMESTAMP'))

    # Fecha de √∫ltima modificaci√≥n (actualiza autom√°ticamente)
    Fecha_Actualizacion = Column(DateTime, nullable=True, onupdate=datetime.utcnow)
